<UserControl x:Class="OnlyT.Windows.SettingsPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:resx="clr-namespace:OnlyT.Properties"
             DataContext="{Binding Settings, Mode=OneWay, Source={StaticResource Locator}}"         
             
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             TextElement.FontWeight="Regular"
             TextElement.FontSize="13"
             TextOptions.TextFormattingMode="Ideal" 
             TextOptions.TextRenderingMode="Auto"        
             Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{DynamicResource MaterialDesignFont}"

             mc:Ignorable="d" 
             d:DesignHeight="1145" d:DesignWidth="1200">

    <UserControl.Resources>
        <Style x:Key="LabelStyle" BasedOn="{StaticResource MaterialDesignLabel}" TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="-5,0,0,0" />
        </Style>
        <Style x:Key="GroupBoxStyle" BasedOn="{StaticResource MaterialDesignCardGroupBox}" TargetType="{x:Type GroupBox}">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Width" Value="330" />
            <Setter Property="Padding" Value="5" />
        </Style>
        <Style x:Key="SampleStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkBrush}" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="Margin" Value="10,0,0,4" />
        </Style>
        <Style x:Key="MiscNotesStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkBrush}" />
            <Setter Property="FontSize" Value="11" />
        </Style>
        <Style x:Key="SettingsComboStyle" BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="Margin" Value="0,0,0,15" />
        </Style>
        <Style x:Key="SettingsCheckBox" BasedOn="{StaticResource MaterialDesignCheckBox}" TargetType="{x:Type CheckBox}">
            <Setter Property="Margin" Value="0,0,0,10" />
        </Style>
        <Style x:Key="SettingsStackPanel" TargetType="{x:Type StackPanel}">
            <Setter Property="Margin" Value="5" />
        </Style>
    </UserControl.Resources>

    <UserControl.Triggers>
        <EventTrigger RoutedEvent="UserControl.Loaded">
            <BeginStoryboard>
                <Storyboard >
                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="0:0:0.5" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </UserControl.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="41"/>
            <RowDefinition Height="259*"/>
        </Grid.RowDefinitions>
        
        <Button Grid.Row="0" 
                Style="{StaticResource MaterialDesignRaisedDarkButton}"
                Command="{Binding NavigateOperatorCommand}">
                <materialDesign:PackIcon
                    Kind="Backburger"
                    Height="24"
                    Width="24" />

        </Button>

        <ScrollViewer Grid.Row="1" 
                      PanningMode="VerticalOnly"
                      VerticalScrollBarVisibility="Auto">
            <WrapPanel Orientation="Horizontal" Margin="10,0,10,10">
                <GroupBox Style="{StaticResource GroupBoxStyle}" Header="{x:Static resx:Resources.MAIN_SECTION}">
                    <DockPanel>
                        <StackPanel Style="{StaticResource SettingsStackPanel}" DockPanel.Dock="Top">

                            <TextBlock Width="305"
                                       HorizontalAlignment="Left"
                                       TextWrapping="Wrap"
                                       Visibility="{Binding Path=IsTimerMonitorViaCommandLine, Converter={StaticResource BooleanToVisibilityConverter}}"
                                       Style="{StaticResource MiscNotesStyle}" 
                                       Margin="0,0,0,10"
                                       Text="{x:Static resx:Resources.CONTROLLED_BY_CMD_LINE}" />

                            <ComboBox ItemsSource="{Binding Monitors}" 
                                      Style="{StaticResource SettingsComboStyle}"
                                      materialDesign:HintAssist.Hint="{x:Static resx:Resources.MONITOR}"
                                      SelectedValuePath="MonitorId" 
                                      DisplayMemberPath="FriendlyName"
                                      IsEnabled="{Binding AllowMainMonitorSelection}"
                                      materialDesign:ComboBoxAssist.ClassicMode="true"
                                      SelectedValue="{Binding MonitorId, Mode=TwoWay}"/>

                            <CheckBox IsChecked="{Binding MainMonitorIsWindowed, Mode=TwoWay}" 
                                      Style="{StaticResource SettingsCheckBox}"
                                      Content="{x:Static resx:Resources.MONITOR_IS_WINDOWED}" />

                            <ComboBox ItemsSource="{Binding OperatingModes}" 
                                      Style="{StaticResource SettingsComboStyle}"
                                      materialDesign:HintAssist.Hint="{x:Static resx:Resources.OP_MODE}"
                                      SelectedValuePath="Mode" 
                                      DisplayMemberPath="Name"
                                      materialDesign:ComboBoxAssist.ClassicMode="true"
                                      SelectedValue="{Binding OperatingMode, Mode=TwoWay}"/>
                            
                            <ComboBox ItemsSource="{Binding ClockHourFormats}" 
                                      Style="{StaticResource SettingsComboStyle}"
                                      materialDesign:HintAssist.Hint="{x:Static resx:Resources.DIGITAL_CLOCK_FORMAT}"
                                      SelectedValuePath="Format" 
                                      DisplayMemberPath="Name"
                                      materialDesign:ComboBoxAssist.ClassicMode="true"
                                      SelectedValue="{Binding ClockHourFormat, Mode=TwoWay}"/>

                            <CheckBox IsChecked="{Binding ShowDigitalSeconds, Mode=TwoWay}" 
                                      Style="{StaticResource SettingsCheckBox}"
                                      IsEnabled="{Binding ShouldEnableShowSeconds}"
                                      Content="{x:Static resx:Resources.SHOW_SECONDS}" />
                        </StackPanel>

                        <TextBlock Text="{Binding AppVersionStr}"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Bottom"
                                   FontSize="11" 
                                   Margin="0,15,0,0"
                                   Foreground="{StaticResource PrimaryHueDarkBrush}"/>
                    </DockPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource GroupBoxStyle}" Header="{x:Static resx:Resources.AUTO_SECTION}">
                    <StackPanel Style="{StaticResource SettingsStackPanel}">
                        <ComboBox ItemsSource="{Binding AutoMeetingTimes}" 
                                  Style="{StaticResource SettingsComboStyle}"
                                  materialDesign:HintAssist.Hint="{x:Static resx:Resources.MEETING}"
                                  SelectedValuePath="Id" 
                                  DisplayMemberPath="Name"
                                  materialDesign:ComboBoxAssist.ClassicMode="true"
                                  SelectedValue="{Binding MidWeekOrWeekend, Mode=TwoWay}"/>

                        <ComboBox ItemsSource="{Binding AdaptiveModes}" 
                                  Style="{StaticResource SettingsComboStyle}"
                                  materialDesign:HintAssist.Hint="{x:Static resx:Resources.ADAPTIVE_MIDWEEK}"
                                  SelectedValuePath="Mode" 
                                  DisplayMemberPath="Name"
                                  materialDesign:ComboBoxAssist.ClassicMode="true"
                                  SelectedValue="{Binding MidWeekAdaptiveMode, Mode=TwoWay}"/>
                        
                        <ComboBox ItemsSource="{Binding AdaptiveModes}" 
                                  Style="{StaticResource SettingsComboStyle}"
                                  materialDesign:HintAssist.Hint="{x:Static resx:Resources.ADAPTIVE_WEEKEND}"
                                  SelectedValuePath="Mode" 
                                  DisplayMemberPath="Name"
                                  materialDesign:ComboBoxAssist.ClassicMode="true"
                                  SelectedValue="{Binding WeekendAdaptiveMode, Mode=TwoWay}"/>

                        <CheckBox IsChecked="{Binding WeekendIncludesFriday, Mode=TwoWay}" 
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.WEEKEND_INCLUDES_FRIDAY}" />

                        <CheckBox IsChecked="{Binding IsCircuitVisit, Mode=TwoWay}" 
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.CIRCUIT_VISIT}" />

                        <CheckBox IsChecked="{Binding ShowCircuitVisitToggle, Mode=TwoWay}" 
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.CO_VISIT_TOGGLE}" />

                        <CheckBox IsChecked="{Binding PersistStudentTime, Mode=TwoWay}" 
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.PERSIST_STUDENT_TIME}" />

                        <CheckBox IsChecked="{Binding JwLibraryCompatibilityMode, Mode=TwoWay}"
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.JW_COMPAT_MODE}"/>

                        <StackPanel Orientation="Horizontal">
                            <CheckBox IsChecked="{Binding ShouldGenerateReports, Mode=TwoWay}" 
                                      Style="{StaticResource SettingsCheckBox}"
                                      Content="{x:Static resx:Resources.SHOULD_GENERATE_REPORTS}" />

                            <materialDesign:PackIcon Kind="FolderOpen" 
                                                     Cursor="Hand"
                                                     Margin="10,0"
                                                     VerticalAlignment="Top"
                                                     Width="18" 
                                                     Height="18" MouseLeftButtonDown="ReportIconMouseLeftButtonDown"/>
                        </StackPanel>

                        <TextBlock Width="305"
                                   HorizontalAlignment="Left"
                                   TextWrapping="Wrap"
                                   Style="{StaticResource MiscNotesStyle}" 
                                   Text="{x:Static resx:Resources.JWL_TRADEMARK}" />

                    </StackPanel>
                </GroupBox>

                <GroupBox Style="{StaticResource GroupBoxStyle}" Header="{x:Static resx:Resources.BELL_SECTION}">
                    <StackPanel Style="{StaticResource SettingsStackPanel}">
                        <CheckBox IsChecked="{Binding IsBellEnabled, Mode=TwoWay}" 
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.ENABLED_BELL}" />

                        <CheckBox IsChecked="{Binding AutoBell, Mode=TwoWay}" 
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.AUTO_BELL}" />

                        <Label Style="{StaticResource LabelStyle}" Content="{x:Static resx:Resources.VOLUME}"/>
                        <Slider Maximum="100" LargeChange="10" SmallChange="1" 
                                Value="{Binding BellVolumePercent}"
                                TickFrequency="10" TickPlacement="BottomRight"/>
                        <Button Width="160" Height="32" Margin="0,20,0,0" 
                                Style="{StaticResource MaterialDesignRaisedLightButton}"
                                HorizontalAlignment="Left" 
                                Content="{x:Static resx:Resources.TEST}"
                                Command="{Binding TestBellCommand}"/>
                    </StackPanel>
                </GroupBox>

                <GroupBox Style="{StaticResource GroupBoxStyle}" Header="{x:Static resx:Resources.TIMER_WIN_SECTION}">
                    <StackPanel Style="{StaticResource SettingsStackPanel}">
                        <ComboBox ItemsSource="{Binding TimeOfDayModes}" 
                                  Style="{StaticResource SettingsComboStyle}"
                                  materialDesign:HintAssist.Hint="{x:Static resx:Resources.FULL_SCREEN_CLOCK}"
                                  SelectedValuePath="Mode" 
                                  DisplayMemberPath="Name"
                                  materialDesign:ComboBoxAssist.ClassicMode="true"
                                  SelectedValue="{Binding TimeOfDayMode, Mode=TwoWay}"/>

                        <Label Style="{StaticResource LabelStyle}" Content="{x:Static resx:Resources.SPLIT_WIDTH}"/>
                        <Slider Maximum="100" LargeChange="10" SmallChange="1" 
                                Value="{Binding AnalogueClockWidthPercent}"
                                Margin="0,0,0,20"
                                TickFrequency="10" TickPlacement="BottomRight"/>

                        <CheckBox IsChecked="{Binding ShowClockFrame, Mode=TwoWay}" 
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.SHOW_CLOCK_FRAME}" />

                        <CheckBox IsChecked="{Binding ShowTimerFrame, Mode=TwoWay}" 
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.SHOW_TIMER_FRAME}" />

                        <CheckBox IsChecked="{Binding ShowBackgroundOnClock, Mode=TwoWay}" 
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.CLOCK_BACKGROUND_COLOUR}" />

                        <CheckBox IsChecked="{Binding ShowBackgroundOnTimer, Mode=TwoWay}" 
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.TIMER_BACKGROUND_COLOUR}" />

                        <CheckBox IsChecked="{Binding ShowTimeOfDayUnderTimer, Mode=TwoWay}" 
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.TIME_UNDER_TIMER}" />

                        <CheckBox IsChecked="{Binding CountUp, Mode=TwoWay}" 
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.TIMER_COUNT_UP}" />

                        <CheckBox IsChecked="{Binding ShowDurationSector, Mode=TwoWay}" 
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.SECTOR_ANALOG_CLOCK}" />

                        <CheckBox IsChecked="{Binding ShowMousePointerInTimerDisplay, Mode=TwoWay}" 
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.MOUSE_PTR}" />

                        <CheckBox IsChecked="{Binding ClockIsFlat, Mode=TwoWay}" 
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.FLAT_CLOCK}" />

                        <ComboBox ItemsSource="{Binding PersistDurationItems}" 
                                  Style="{StaticResource SettingsComboStyle}"
                                  materialDesign:HintAssist.Hint="{x:Static resx:Resources.PERSIST_TALK_DURATION}"
                                  SelectedValuePath="Seconds" 
                                  DisplayMemberPath="Name"
                                  materialDesign:ComboBoxAssist.ClassicMode="true"
                                  SelectedValue="{Binding PersistDurationSecs, Mode=TwoWay}"/>

                    </StackPanel>
                </GroupBox>

                <GroupBox Style="{StaticResource GroupBoxStyle}" Header="{x:Static resx:Resources.REMOTE_SECTION}">
                    <StackPanel Style="{StaticResource SettingsStackPanel}">
                        <ComboBox ItemsSource="{Binding Ports}" 
                                  Style="{StaticResource SettingsComboStyle}"
                                  materialDesign:HintAssist.Hint="{x:Static resx:Resources.PORT}"
                                  SelectedValuePath="Port" 
                                  DisplayMemberPath="Name"
                                  materialDesign:ComboBoxAssist.ClassicMode="true"
                                  SelectedValue="{Binding Port, Mode=TwoWay}"/>

                        <Button Width="160" HorizontalAlignment="Left" 
                                Style="{StaticResource MaterialDesignRaisedLightButton}"
                                Height="32"
                                Command="{Binding OpenPortCommand}"
                                Margin="0,10,0,0">
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{Binding ElevatedShield}" Height="16"/>
                                    <Label Content="{x:Static resx:Resources.OPEN_PORT}" />
                                </StackPanel>
                        </Button>

                    </StackPanel>
                </GroupBox>

                <GroupBox Style="{StaticResource GroupBoxStyle}" Header="{x:Static resx:Resources.CLOCK_SECTION}">
                    <StackPanel Style="{StaticResource SettingsStackPanel}">
                        <CheckBox IsChecked="{Binding IsWebClockEnabled, Mode=TwoWay}" 
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.ENABLED_WEB_CLOCK}" />

                        <TextBlock>
                            <Hyperlink Command="{Binding WebClockUrlLinkCommand}">
                                <TextBlock Text="{Binding WebClockUrl, Mode=OneWay}" />
                            </Hyperlink>
                        </TextBlock>
                        
                        <Image Width="200" Source="{Binding WebClockQrCode}">
                            
                        </Image>
                            
                    </StackPanel>
                </GroupBox>

                <GroupBox Style="{StaticResource GroupBoxStyle}" Header="{x:Static resx:Resources.APPS_SECTION}">
                    <StackPanel Style="{StaticResource SettingsStackPanel}">
                        <CheckBox IsChecked="{Binding IsApiEnabled, Mode=TwoWay}" 
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.ENABLED_API}" />

                        <CheckBox IsChecked="{Binding IsApiThrottled, Mode=TwoWay}" 
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.THROTTLED}" />

                        <TextBox Text="{Binding MobileIpAddress, Mode=OneWay}" 
                                 Margin="0,5,0,0"
                                 IsReadOnly="True"
                                 materialDesign:HintAssist.Hint="{x:Static resx:Resources.IP_ADDRESS}"
                                 Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>

                        <TextBox Text="{Binding Port, Mode=OneWay}" 
                                 Margin="0,5,0,0"
                                 IsReadOnly="True"
                                 materialDesign:HintAssist.Hint="{x:Static resx:Resources.PORT}"
                                 Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>

                        <TextBox Text="{Binding ApiCode, Mode=TwoWay}" 
                                 Margin="0,5,0,0"
                                 materialDesign:HintAssist.Hint="{x:Static resx:Resources.ACCESS_CODE}"
                                 Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>

                    </StackPanel>
                </GroupBox>

                <GroupBox Style="{StaticResource GroupBoxStyle}" Header="{x:Static resx:Resources.COUNTDOWN_SECTION}">
                    <StackPanel Style="{StaticResource SettingsStackPanel}">

                        <TextBlock Width="305"
                                   HorizontalAlignment="Left"
                                   TextWrapping="Wrap"
                                   Visibility="{Binding Path=IsCountdownMonitorViaCommandLine, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   Style="{StaticResource MiscNotesStyle}" 
                                   Margin="0,0,0,10"
                                   Text="{x:Static resx:Resources.CONTROLLED_BY_CMD_LINE}" />

                        <ComboBox ItemsSource="{Binding Monitors}" 
                                  Style="{StaticResource SettingsComboStyle}"
                                  materialDesign:HintAssist.Hint="{x:Static resx:Resources.MONITOR}"
                                  SelectedValuePath="MonitorId" 
                                  DisplayMemberPath="FriendlyName"
                                  IsEnabled="{Binding AllowCountdownMonitorSelection}"
                                  materialDesign:ComboBoxAssist.ClassicMode="true"
                                  SelectedValue="{Binding CountdownMonitorId, Mode=TwoWay}"/>

                        <CheckBox IsChecked="{Binding CountdownMonitorIsWindowed, Mode=TwoWay}" 
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.COUNTDOWN_IS_WINDOWED}" />

                        <ComboBox ItemsSource="{Binding ScreenLocationItems}" 
                                  Style="{StaticResource SettingsComboStyle}"
                                  materialDesign:HintAssist.Hint="{x:Static resx:Resources.LOCATION_ON_SCREEN}"
                                  SelectedValuePath="Location" 
                                  DisplayMemberPath="Name"
                                  materialDesign:ComboBoxAssist.ClassicMode="true"
                                  SelectedValue="{Binding CountdownScreenLocation, Mode=TwoWay}"/>

                        <Label Style="{StaticResource LabelStyle}" Content="{x:Static resx:Resources.COUNTDOWN_ZOOM}"/>
                        <Slider Minimum="10" Maximum="100" LargeChange="10" SmallChange="1" 
                                Value="{Binding CountdownZoomPercent}"
                                Margin="0,0,0,20"
                                TickFrequency="10" TickPlacement="BottomRight"/>

                        <CheckBox IsChecked="{Binding ShowCountdownFrame, Mode=TwoWay}" 
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.SHOW_COUNTDOWN_FRAME}" />

                        <CheckBox IsChecked="{Binding IsCountdownWindowTransparent, Mode=TwoWay}" 
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.COUNTDOWN_TRANSPARENT}" />

                        <ComboBox ItemsSource="{Binding CountdownElementsToShowItems}" 
                                  Style="{StaticResource SettingsComboStyle}"
                                  materialDesign:HintAssist.Hint="{x:Static resx:Resources.COUNTDOWN_ELEMENTS}"
                                  SelectedValuePath="Elements" 
                                  DisplayMemberPath="Name"
                                  materialDesign:ComboBoxAssist.ClassicMode="true"
                                  SelectedValue="{Binding CountdownElementsToShow, Mode=TwoWay}"/>

                        <ComboBox ItemsSource="{Binding CountdownDurationItems}" 
                                  Style="{StaticResource SettingsComboStyle}"
                                  materialDesign:HintAssist.Hint="{x:Static resx:Resources.COUNTDOWN_DURATION_MINS}"
                                  SelectedValuePath="DurationMins" 
                                  DisplayMemberPath="Name"
                                  materialDesign:ComboBoxAssist.ClassicMode="true"
                                  SelectedValue="{Binding CountdownDurationMins, Mode=TwoWay}"/>

                        <TextBox MinLines="6"
                                 Style="{StaticResource MaterialDesignOutlinedTextBox}"
                                 materialDesign:HintAssist.Hint="{x:Static resx:Resources.MEETING_STARTS}"
                                 TextWrapping="Wrap"
                                 AcceptsTab="False"
                                 Height="120"
                                 HorizontalScrollBarVisibility="Disabled"
                                 VerticalScrollBarVisibility="Auto"
                                 AcceptsReturn="True"
                                 Text="{Binding MeetingStartTimesAsText, Mode=TwoWay}">
                            
                        </TextBox>
                        <Label Style="{StaticResource LabelStyle}" Content="{x:Static resx:Resources.NOTES}"/>
                            <BulletDecorator>
                                <BulletDecorator.Bullet>
                                    <Ellipse Height="5" Width="5" Fill="{StaticResource PrimaryHueLightBrush}"/>
                                </BulletDecorator.Bullet>
                                <TextBlock Style="{StaticResource SampleStyle}" 
                                           Text="{x:Static resx:Resources.MTG_START_NOTES1}"/>
                            </BulletDecorator>

                            <BulletDecorator>
                                <BulletDecorator.Bullet>
                                    <Ellipse Height="5" Width="5" Fill="{StaticResource PrimaryHueLightBrush}"/>
                                </BulletDecorator.Bullet>
                                <TextBlock Style="{StaticResource SampleStyle}" 
                                           Text="{x:Static resx:Resources.MTG_START_NOTES2}"/>
                            </BulletDecorator>

                            <BulletDecorator>
                                <BulletDecorator.Bullet>
                                    <Ellipse Height="5" Width="5" Fill="{StaticResource PrimaryHueLightBrush}"/>
                                </BulletDecorator.Bullet>
                                <TextBlock Style="{StaticResource SampleStyle}" 
                                           Text="{x:Static resx:Resources.MTG_START_NOTES3}"/>
                            </BulletDecorator>
                    </StackPanel>

                </GroupBox>

                <GroupBox Style="{StaticResource GroupBoxStyle}" Header="{x:Static resx:Resources.MISC_SECTION}">
                    <StackPanel Style="{StaticResource SettingsStackPanel}">

                        <CheckBox IsChecked="{Binding AllowCountUpToggle, Mode=TwoWay}" 
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.ALLOW_COUNT_UP_TOGGLE}" />

                        <CheckBox IsChecked="{Binding AlwaysOnTop, Mode=TwoWay}" 
                                  Style="{StaticResource SettingsCheckBox}"
                                  Content="{x:Static resx:Resources.ALWAYS_ON_TOP}" />

                        <ComboBox ItemsSource="{Binding LoggingLevels}"
                                  Style="{StaticResource SettingsComboStyle}" 
                                  materialDesign:HintAssist.IsFloating="True"
                                  materialDesign:HintAssist.Hint="{x:Static resx:Resources.LOGGING_LEVEL}"
                                  SelectedValuePath="Level" 
                                  DisplayMemberPath="Name"
                                  materialDesign:ComboBoxAssist.ClassicMode="true"
                                  SelectedValue="{Binding LogEventLevel, Mode=TwoWay}"/>


                        <DockPanel>
                            <materialDesign:PackIcon Kind="Translate" 
                                                     Width="24" 
                                                     Height="24"
                                                     Margin="0,0,6,0"
                                                     VerticalAlignment="Center"/>
                            <ComboBox ItemsSource="{Binding Languages}" 
                                      Style="{StaticResource SettingsComboStyle}"
                                      materialDesign:HintAssist.Hint="{x:Static resx:Resources.LANGUAGE}"
                                      SelectedValuePath="LanguageId" 
                                      DisplayMemberPath="LanguageName"
                                      materialDesign:ComboBoxAssist.ClassicMode="true"
                                      SelectedValue="{Binding LanguageId, Mode=TwoWay}"/>
                        </DockPanel>
                        <TextBlock Style="{StaticResource MiscNotesStyle}" 
                                   TextWrapping="Wrap"
                                   Text="{x:Static resx:Resources.RESTART_LANGUAGE}"/>

                    </StackPanel>
                </GroupBox>

            </WrapPanel>
        </ScrollViewer>

    </Grid>
</UserControl>
